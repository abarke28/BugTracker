@model BugTracker.Models.ViewModels.BugDetailVm
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
    <li class="breadcrumb-item"><a asp-controller="Projects" asp-action="Index">Projects</a></li>
    <li class="breadcrumb-item"><a asp-controller="Projects" asp-action="Detail" asp-route-id="@Model.ProjectId">@Model.ProjectName</a></li>
    <li class="breadcrumb-item active">@Model.Bug.Title</li>
</ol>

<div class="card border-primary m-3">
    <div class="card-header">
        <span>Bug #@Model.Bug.Id </span>
        <span>@await Html.PartialAsync("_BugStatus", Model.Bug.Status) </span>
        <span class="float-right">
            <a asp-controller="Bugs" asp-action="Edit" asp-route-id="@Model.Bug.Id"><img src="~/lib/images/edit-24.png" class="edit-bug-icon" /></a>
        </span>
    </div>
    <div class="card-body">
        <p class="card-subtitle text-muted">@Model.Bug.DateSubmitted.ToShortDateString()</p>
        <h2 class="card-title">@Model.Bug.Title</h2>
        <p class="card-text">@Model.Bug.Description</p>
        @if ((Model.Bug.Status & BugStatus.Open) == BugStatus.Open)
        {
            <p class="card-text">
                <span class="px-3 text-muted">Targeted Completion:  @Model.Bug.DateTargeted.ToShortDateString()</span>
                @if (!String.IsNullOrEmpty(Model.Bug.Assignee))
                {
                    <span class="text-muted">Assigned To:  @Model.Bug.Assignee</span>
                }
            </p>
        }
        @if (((Model.Bug.Status & BugStatus.Closed) == BugStatus.Closed)||((Model.Bug.Status & BugStatus.Resolved) == BugStatus.Resolved))
        {
            <p class="card-text">
                <span>Closed: @Model.Bug.DateResolved.ToShortDateString()</span>
                <span class="px-3">PR/Commit:  @Model.Bug.ResolutionCommit</span>
            </p>
            @if (!String.IsNullOrEmpty(Model.Bug.ResolutionDescription))
            {
                <p class="card-text">Details:  @Model.Bug.ResolutionDescription</p>
            }
        }
    </div>
</div>


<div class="container">
    <h4 class="my-3">Comments</h4>
    <div id="comments">
        @foreach (var comment in Model.Bug.Comments)
        {
            <div class="card border-secondary mb-4 ml-3" style="max-width: 30rem;">
                <div class="card-header py-0 delete-icon-container">
                    <span class="text-muted mt-2">@comment.TimeStamp</span>
                    <span class="float-right">
                        <button id="deleteButton" data-comment-id="@comment.Id" class="js-delete m-0 btn btn-link">
                            <img src="~/lib/images/delete-bin-32.png" class="delete-comment-icon" />
                        </button>
                    </span>
                </div>
                <div class="card-body">
                    <b class="card-title">@comment.SubmittedBy</b>
                    <p class="card-text">@comment.Text</p>
                </div>
            </div>
        }
    </div>

    <div id="newCommentCard" class="card border-secondary mb-2 ml-3" style="max-width: 30rem">
        <div class="card-header">New Comment</div>
        <div class="card-body">
            <b id="userName" class="card-title mb-3">@Model.UserName</b>
            <div>
                <textarea id="newComment" cols="50" rows="4" class="m-2"></textarea>
            </div>
            <button id="saveButton" class="btn btn-primary">Save</button>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/bootbox/dist/bootbox.js"></script>
    <script>
        $(document).ready(function()
        {
            $("#saveButton").on("click", function () {
                var commentText = $("#newComment").val().trim();
                var count = commentText.length;
                if (count !== 0)
                {
                    var vm = {
                        bugId: @Model.Bug.Id,
                        text: commentText,
                        submittedBy: "@Model.UserName"
                    };

                    bootbox.confirm("Save Comment?", function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/comments",
                                method: "POST",
                                data: JSON.stringify(vm),
                                dataType: "json",
                                contentType: "application/json",
                                success: function (data) {
                                    var now = Date.now();
                                    var date = new Date(now);
                                    var offset = date.getTimezoneOffset();
                                    date = new Date(date.getTime() + (offset * 60 * 1000));
                                    date = date.toISOString().split('T')[0];

                                    var newCommentHtml =
                                        "<div class='card border-secondary mb-4 ml-3' style='max-width: 30rem'>"
                                        + "<div class='card-header py-0 delete-icon-container'>"
                                        + "<span class='text-muted mt-2'>" + date + "</span>"
                                        + "<span class='float-right'>"
                                        + "<button id='deleteButton' data-comment-id='" + data.id + "' class='js-delete m-0 btn btn-link'>"
                                        + "<img src='/lib/images/delete-bin-32.png' class='delete-comment-icon' />"
                                        + "</button>"
                                        + "</span>"
                                        + "</div>"
                                        + "<div class='card-body'>"
                                        + "<b class='card-title'>" + vm.submittedBy + "</b>"
                                        + "<p class='card-text'>" + $.trim($("#newComment").val()) + "</p>"
                                        + "</div>"
                                        + "</div>";

                                    $("#comments").append(newCommentHtml);
                                    document.getElementById("newComment").value = "";
                                },
                                error: function () {
                                    bootbox.alert("Comment Posting Failed")
                                }
                            });
                        }
                    });
                }
            });

            $("#comments").on("click", ".js-delete", function () {
                var button = $(this);
                bootbox.confirm("Are you sure?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/comments/" + button.attr("data-comment-id"),
                            method: "DELETE"
                        }).done(function () {
                            button.parents(".card").remove();
                        }).fail(function () {
                            bootbox.alert("Comment Deletion Failed");
                        });
                    }
                });
            });
        });
    </script>
}